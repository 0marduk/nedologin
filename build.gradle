plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.0.7'
group = 'ru.marduk'
archivesBaseName = 'Nedologin-1.19.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

tasks.named("jarJar") {
    finalizedBy 'reobfJarJar'
}

minecraft {
    mappings channel: 'parchment', version: '2022.08.14-1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                nedologin {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                nedologin {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'nedologin', '--all', '--output', file('src/generated/resources/')

            mods {
                nedologin {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    compileOnly.extendsFrom(jarJar)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    jarJar 'at.favre.lib:bytes:[1.0,1.6)'
    jarJar 'at.favre.lib:bcrypt:[0.4,0.5)'
}

mixin {
    add sourceSets.main, 'mixins.nedologin.refmap.json'

    config 'mixins.nedologin.json'
}

allprojects {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }

        mavenCentral()
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

tasks.jar.mustRunAfter(processResources)

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Nedologin",
                "Specification-Vendor"    : "marduk",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}