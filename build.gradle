//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.120'
    id 'maven-publish'
}

version = "${minecraftVersion}-1.0.9"
group = 'ru.marduk'
archivesBaseName = 'Nedologin'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

jarJar.enable()

minecraft {

}

runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', 'nedologin'
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', 'nedologin'
        programArgument '--nogui'
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', 'nedologin'
    }

    data {
        programArguments.addAll '--mod', 'nedologin', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

configurations {
    compileOnly.extendsFrom(jarJar)
}

dependencies {
    implementation 'net.neoforged:neoforge:21.1.22'

    jarJar 'at.favre.lib:bytes:[1.0,1.6)'
    jarJar 'at.favre.lib:bcrypt:[0.4,0.5)'
}

allprojects {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }

        mavenCentral()
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/neoforge.mods.toml'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/neoforge.mods.toml'
    }
}

tasks.jar.mustRunAfter(processResources)

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Nedologin",
                "Specification-Vendor"    : "marduk",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // from components.java
            // jarJar.component(it)
        }
    }
    repositories {
        maven {
            credentials {
                username "${mmuser}"
                password "${mmpassword}"
            }
            url = "https://maven.marduk.ru/"
        }
    }
}